function ub98484234(eab3bf71800, eab3bf71801, eab3bf71802) {
  var rk = [
    21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21,
    41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41,
    35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35,
    31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31,
    34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34,
    34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34,
    40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40,
    17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17,
    10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10,
    21, 41, 35, 31, 34, 34, 40, 17,
  ];
  var k2 = [0x5a3ab33e, 0x36f5d7fe];
  var lk = [0x5a3ab33e, 0x36f5d7fe];
  var v = [
    0xd973c9dc, 0xa34442b4, 0x6565335d, 0x70b26fe6, 0x404b1fc4, 0x6a8568d1,
    0x234f858b, 0x29a17dba, 0xea54d60f, 0x4a565443, 0x58fda5d0, 0x88dece8e,
    0xa4febb70, 0xe141cc8a, 0x1de302aa, 0x8348236, 0x20c70e4f, 0xf9739e92,
    0xa056d63, 0x78193e8f, 0x5d6e5d2e, 0xcf960381, 0x90f63be3, 0xac3087b7,
    0xe3e6686d, 0xedb187eb, 0x4ce77435, 0xb8531244, 0xd50d6f16, 0x18a94f30,
    0xd6c39b91, 0x7356bb4f, 0xb164dfff, 0xaef5a9e0, 0x11d11611, 0x75d6ce70,
    0x670a3c06, 0x8bc3f4b4, 0xe7754fc2, 0xd7a5c3af, 0xcedf6e33, 0xb515fcb7,
    0xf1b40f5b, 0x7165466d, 0x763db9f1, 0x98fd49fa, 0x1670094f, 0xfb5f5320,
    0x48c60f01, 0xd500913f, 0xfebdc6fb, 0xecef8468, 0x19ee1e6c, 0x1f12de85,
    0xc017c083, 0x6fd3c6f5, 0x4c65487, 0x74710091, 0x49a72d13, 0xdb36f41b,
    0xfb5c9757, 0xbf49b44e, 0xae20900e, 0x13a9dd12, 0x2913f19b, 0x996b9d35,
    0xd88f0806, 0x4f2b973e, 0x25dea627, 0xa16669ef, 0x7de1b139, 0xe67000b5,
    0xc638cae4, 0x21114385, 0x3280b715, 0xb57c29e2, 0xae09c52b, 0x3fae82f4,
    0xfb205c1d, 0xba55cb6a, 0xda6b9a86, 0xd20ea75c, 0xc5ad0798, 0x34d3767b,
    0xc57ee566, 0xe7bf7529, 0x2d3753f4, 0xadcc036b, 0x44a3ea9c, 0x26173f74,
    0xae0819f4, 0x66ac0692, 0x22f8a978, 0x932359e1, 0x1d678d73, 0x9dc47ac4,
    0x1125f07a, 0xc4660e41, 0x8510a80d, 0xf964caa6, 0x575365f6, 0x3a27e76f,
    0xede4d7ec, 0xb582037d, 0x2dfad011, 0x35ce13bc, 0x6bd989f7, 0xdddc0073,
    0x4718d526, 0x6d04d44e, 0x5d7dbc03, 0x6fe8fe37, 0x74494e96, 0xfe756db4,
    0xb4de5b4, 0x966dc57c, 0x57e343e2, 0x5fc798b2, 0x282f8032, 0xcd7f979e,
    0x657b0923, 0x8e992b0d, 0xd697a21, 0x851e1d28, 0x3efb1fdd, 0xd956d3b3,
    0xcbf818b3, 0xa61b82a9, 0x27c5f329, 0x7d20c9d7, 0x6a4627c6, 0x3102c583,
    0xe1f1d8d6, 0x95492c0c, 0xc7f42960, 0x6a87d3ad, 0x9fa9d24c, 0xb214df0b,
    0x6802d206, 0xb2643b05, 0x14d12ee2, 0x70137ccf, 0xa489a58a, 0x6c28397e,
    0x45252e82, 0x4d4483ae, 0x9e5ef761, 0x152fd123, 0x6cc521a6, 0xb49389ab,
    0x372f63ec, 0x562f8947, 0x5af79831, 0xa951e8f7, 0x832ec0b2, 0x8c36040d,
    0xab73020c, 0x26891006, 0x3e2e1929, 0x60fe8658, 0x4b4c01a4, 0x73927f1f,
    0xf10995e9, 0x9b45abab, 0x8a7f5521, 0x99c2ab31, 0x566dc269, 0xac3fd260,
    0x77fb5874, 0x838432cf, 0xc98ae145, 0x93b107f4, 0x2e32531e, 0xba3bf03f,
    0x9a4ce415, 0x6ac21256, 0x56c88f4, 0x7ba8aad1, 0x736553bd, 0xc24610b,
    0x376e09e8, 0x2cfac2a8, 0xc656247a, 0xfeefe8d1, 0xca266ea8, 0xd034d947,
    0x531a0308, 0x1887fbc5, 0x35f8737d, 0x4460d67c, 0xa2a8f04, 0x28f0360c,
    0x2e65d7d5, 0x1f92ab81, 0x179f323a, 0x3cf1da91, 0xe3dc8c13, 0x3300954f,
    0xec770ea2, 0x16564d60, 0x3f38ac5a, 0xd4159c66, 0xe4e46784, 0x810cc305,
    0x9c323c2b, 0xbf1ab068, 0xdfa7ab0f, 0x6ec681d9, 0x716a7d79, 0x53318054,
    0x6b528358, 0x98c4deeb, 0x6c7bfddd, 0xc3b12037, 0x3cf2ae94, 0x5d659815,
    0x40e8ab4d, 0x64b7f8b0, 0xf1bc2bc5, 0x75a8312a, 0x6888891, 0x532e06d6,
    0x4b46e41a, 0xc3105ccb, 0x1441888d, 0x53a40b90, 0x31144401, 0xc380c50b,
    0x40c28ff9, 0x7e060d70, 0x30780f68, 0x47312dd9, 0x61218f57, 0x3ad180bc,
    0xf086c7d2, 0x48e8fe87, 0x5506294a, 0xe57a9973, 0xa60e0c62, 0x9a00774d,
    0x5c9c39f4, 0x5943f8f8, 0x3199ce63, 0x758958db, 0xe3fdf48e, 0xf97a9e05,
    0x649560cd, 0x2b5b7583, 0xcbf7a55e, 0x35a41c84, 0x5df626cc, 0x26956cdb,
    0xb44b2a1a, 0x83403a8a, 0x4e95d85a, 0x47257ab5, 0x3326ee34, 0x2787f4cf,
    0x1252499a, 0x3e5017a2, 0xd44277ad, 0xa2891a07, 0xfa0fbdae, 0xe767dcd3,
    0xf2154a71, 0x591a32a1, 0x3f563072, 0x5778c2a2, 0xd5612a17, 0x1152778b,
    0xe552c590, 0xea5b5fa5, 0xc0317ece, 0x24489b09, 0x4f416997, 0xdc86ed3d,
    0xbc9d7d1a, 0x15d6f84, 0xb2c57cb2, 0x51b98af6, 0x1d8065c, 0xa4a92638,
    0x26c5c231, 0x62c482cd, 0xfb2ccc1f, 0x5629a407, 0x733fc94f, 0x203dbf48,
    0x6defc09d, 0x20a5b6b1, 0xf533663c, 0x53848203, 0x85f40857, 0x7f42ac16,
    0x821c6a8d, 0x58905962, 0x5b62d7f3, 0x8f14a2ff, 0x39705ece, 0x17ee4b2d,
    0xa3e36f9f, 0xc313a857, 0x40539526, 0x91c1b6e, 0x93dc462c, 0x97b70304,
    0x10614de5, 0xf3d89b9e, 0x962d5a36, 0x545f2594, 0x2f787c5d, 0x6fd0b0e9,
    0xa4cf405d, 0x7b2c5a4d, 0xf90a2ac7, 0x4b583aed, 0xa670d925, 0x5df923be,
    0x57f1b9f, 0x181d7ee1, 0x704f861d, 0xad43fe4c, 0xcb3a7981, 0x9c9c67cc,
    0xb7d2fa7f, 0x4a0465d1, 0x1187d87, 0xebc78273, 0x80c3da03, 0x7d488f70,
    0x6cc3d5a4, 0xff6a589f, 0xc0ebd5b1, 0x448c080e, 0x4b1f9dcd, 0x6829d64c,
    0xf62525fe, 0x653702e0, 0x83c0a815, 0x342174af, 0xabe53a88, 0x87a38bf8,
    0xf856fc62, 0x6ef15a4c, 0x6a9f5e19, 0x1ff80ce, 0x9c419936, 0x3def4689,
    0xe97d52e0, 0xd15e34e1, 0xff588a66, 0xf3584be9, 0xd9f31f4e, 0xe0b6b605,
    0xe79241f8, 0x27b3cec3, 0xc630e0b5, 0x4772cb08,
  ];
  var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
  for (var O = 0; O < 358; O++) {
    v[O] ^= 0x3a0c9e6f;
  }
  v[1] = (v[1] >>> lk[1] % 16) | (v[1] << (32 - (lk[1] % 16)));
  v[0] ^= lk[0];
  v[3] = (v[3] << lk[1] % 16) | (v[3] >>> (32 - (lk[1] % 16)));
  v[2] += lk[0];
  v[5] ^= lk[1];
  v[4] -= lk[0];
  v[7] += lk[1];
  v[6] ^= lk[0];
  v[9] -= lk[1];
  v[8] += lk[0];
  v[11] ^= lk[1];
  v[10] = (v[10] >>> lk[0] % 16) | (v[10] << (32 - (lk[0] % 16)));
  v[13] -= lk[1];
  v[12] += lk[0];
  v[15] ^= lk[1];
  v[14] -= lk[0];
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] = (v[19] >>> lk[1] % 16) | (v[19] << (32 - (lk[1] % 16)));
  v[18] ^= lk[0];
  v[21] = (v[21] << lk[1] % 16) | (v[21] >>> (32 - (lk[1] % 16)));
  v[20] += lk[0];
  v[23] ^= lk[1];
  v[22] -= lk[0];
  v[25] += lk[1];
  v[24] ^= lk[0];
  v[27] -= lk[1];
  v[26] += lk[0];
  v[29] ^= lk[1];
  v[28] = (v[28] >>> lk[0] % 16) | (v[28] << (32 - (lk[0] % 16)));
  v[31] -= lk[1];
  v[30] += lk[0];
  v[33] ^= lk[1];
  v[32] -= lk[0];
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] = (v[37] >>> lk[1] % 16) | (v[37] << (32 - (lk[1] % 16)));
  v[36] ^= lk[0];
  v[39] = (v[39] << lk[1] % 16) | (v[39] >>> (32 - (lk[1] % 16)));
  v[38] += lk[0];
  v[41] ^= lk[1];
  v[40] -= lk[0];
  v[43] += lk[1];
  v[42] ^= lk[0];
  v[45] -= lk[1];
  v[44] += lk[0];
  v[47] ^= lk[1];
  v[46] = (v[46] >>> lk[0] % 16) | (v[46] << (32 - (lk[0] % 16)));
  v[49] -= lk[1];
  v[48] += lk[0];
  v[51] ^= lk[1];
  v[50] -= lk[0];
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] = (v[55] >>> lk[1] % 16) | (v[55] << (32 - (lk[1] % 16)));
  v[54] ^= lk[0];
  v[57] = (v[57] << lk[1] % 16) | (v[57] >>> (32 - (lk[1] % 16)));
  v[56] += lk[0];
  v[59] ^= lk[1];
  v[58] -= lk[0];
  v[61] += lk[1];
  v[60] ^= lk[0];
  v[63] -= lk[1];
  v[62] += lk[0];
  v[65] ^= lk[1];
  v[64] = (v[64] >>> lk[0] % 16) | (v[64] << (32 - (lk[0] % 16)));
  v[67] -= lk[1];
  v[66] += lk[0];
  v[69] ^= lk[1];
  v[68] -= lk[0];
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] = (v[73] >>> lk[1] % 16) | (v[73] << (32 - (lk[1] % 16)));
  v[72] ^= lk[0];
  v[75] = (v[75] << lk[1] % 16) | (v[75] >>> (32 - (lk[1] % 16)));
  v[74] += lk[0];
  v[77] ^= lk[1];
  v[76] -= lk[0];
  v[79] += lk[1];
  v[78] ^= lk[0];
  v[81] -= lk[1];
  v[80] += lk[0];
  v[83] ^= lk[1];
  v[82] = (v[82] >>> lk[0] % 16) | (v[82] << (32 - (lk[0] % 16)));
  v[85] -= lk[1];
  v[84] += lk[0];
  v[87] ^= lk[1];
  v[86] -= lk[0];
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] = (v[91] >>> lk[1] % 16) | (v[91] << (32 - (lk[1] % 16)));
  v[90] ^= lk[0];
  v[93] = (v[93] << lk[1] % 16) | (v[93] >>> (32 - (lk[1] % 16)));
  v[92] += lk[0];
  v[95] ^= lk[1];
  v[94] -= lk[0];
  v[97] += lk[1];
  v[96] ^= lk[0];
  v[99] -= lk[1];
  v[98] += lk[0];
  v[101] ^= lk[1];
  v[100] = (v[100] >>> lk[0] % 16) | (v[100] << (32 - (lk[0] % 16)));
  v[103] -= lk[1];
  v[102] += lk[0];
  v[105] ^= lk[1];
  v[104] -= lk[0];
  v[107] -= lk[1];
  v[106] -= lk[0];
  v[109] = (v[109] >>> lk[1] % 16) | (v[109] << (32 - (lk[1] % 16)));
  v[108] ^= lk[0];
  v[111] = (v[111] << lk[1] % 16) | (v[111] >>> (32 - (lk[1] % 16)));
  v[110] += lk[0];
  v[113] ^= lk[1];
  v[112] -= lk[0];
  v[115] += lk[1];
  v[114] ^= lk[0];
  v[117] -= lk[1];
  v[116] += lk[0];
  v[119] ^= lk[1];
  v[118] = (v[118] >>> lk[0] % 16) | (v[118] << (32 - (lk[0] % 16)));
  v[121] -= lk[1];
  v[120] += lk[0];
  v[123] ^= lk[1];
  v[122] -= lk[0];
  v[125] -= lk[1];
  v[124] -= lk[0];
  v[127] = (v[127] >>> lk[1] % 16) | (v[127] << (32 - (lk[1] % 16)));
  v[126] ^= lk[0];
  v[129] = (v[129] << lk[1] % 16) | (v[129] >>> (32 - (lk[1] % 16)));
  v[128] += lk[0];
  v[131] ^= lk[1];
  v[130] -= lk[0];
  v[133] += lk[1];
  v[132] ^= lk[0];
  v[135] -= lk[1];
  v[134] += lk[0];
  v[137] ^= lk[1];
  v[136] = (v[136] >>> lk[0] % 16) | (v[136] << (32 - (lk[0] % 16)));
  v[139] -= lk[1];
  v[138] += lk[0];
  v[141] ^= lk[1];
  v[140] -= lk[0];
  v[143] -= lk[1];
  v[142] -= lk[0];
  v[145] = (v[145] >>> lk[1] % 16) | (v[145] << (32 - (lk[1] % 16)));
  v[144] ^= lk[0];
  v[147] = (v[147] << lk[1] % 16) | (v[147] >>> (32 - (lk[1] % 16)));
  v[146] += lk[0];
  v[149] ^= lk[1];
  v[148] -= lk[0];
  v[151] += lk[1];
  v[150] ^= lk[0];
  v[153] -= lk[1];
  v[152] += lk[0];
  v[155] ^= lk[1];
  v[154] = (v[154] >>> lk[0] % 16) | (v[154] << (32 - (lk[0] % 16)));
  v[157] -= lk[1];
  v[156] += lk[0];
  v[159] ^= lk[1];
  v[158] -= lk[0];
  v[161] -= lk[1];
  v[160] -= lk[0];
  v[163] = (v[163] >>> lk[1] % 16) | (v[163] << (32 - (lk[1] % 16)));
  v[162] ^= lk[0];
  v[165] = (v[165] << lk[1] % 16) | (v[165] >>> (32 - (lk[1] % 16)));
  v[164] += lk[0];
  v[167] ^= lk[1];
  v[166] -= lk[0];
  v[169] += lk[1];
  v[168] ^= lk[0];
  v[171] -= lk[1];
  v[170] += lk[0];
  v[173] ^= lk[1];
  v[172] = (v[172] >>> lk[0] % 16) | (v[172] << (32 - (lk[0] % 16)));
  v[175] -= lk[1];
  v[174] += lk[0];
  v[177] ^= lk[1];
  v[176] -= lk[0];
  v[179] -= lk[1];
  v[178] -= lk[0];
  v[181] = (v[181] >>> lk[1] % 16) | (v[181] << (32 - (lk[1] % 16)));
  v[180] ^= lk[0];
  v[183] = (v[183] << lk[1] % 16) | (v[183] >>> (32 - (lk[1] % 16)));
  v[182] += lk[0];
  v[185] ^= lk[1];
  v[184] -= lk[0];
  v[187] += lk[1];
  v[186] ^= lk[0];
  v[189] -= lk[1];
  v[188] += lk[0];
  v[191] ^= lk[1];
  v[190] = (v[190] >>> lk[0] % 16) | (v[190] << (32 - (lk[0] % 16)));
  v[193] -= lk[1];
  v[192] += lk[0];
  v[195] ^= lk[1];
  v[194] -= lk[0];
  v[197] -= lk[1];
  v[196] -= lk[0];
  v[199] = (v[199] >>> lk[1] % 16) | (v[199] << (32 - (lk[1] % 16)));
  v[198] ^= lk[0];
  v[201] = (v[201] << lk[1] % 16) | (v[201] >>> (32 - (lk[1] % 16)));
  v[200] += lk[0];
  v[203] ^= lk[1];
  v[202] -= lk[0];
  v[205] += lk[1];
  v[204] ^= lk[0];
  v[207] -= lk[1];
  v[206] += lk[0];
  v[209] ^= lk[1];
  v[208] = (v[208] >>> lk[0] % 16) | (v[208] << (32 - (lk[0] % 16)));
  v[211] -= lk[1];
  v[210] += lk[0];
  v[213] ^= lk[1];
  v[212] -= lk[0];
  v[215] -= lk[1];
  v[214] -= lk[0];
  v[217] = (v[217] >>> lk[1] % 16) | (v[217] << (32 - (lk[1] % 16)));
  v[216] ^= lk[0];
  v[219] = (v[219] << lk[1] % 16) | (v[219] >>> (32 - (lk[1] % 16)));
  v[218] += lk[0];
  v[221] ^= lk[1];
  v[220] -= lk[0];
  v[223] += lk[1];
  v[222] ^= lk[0];
  v[225] -= lk[1];
  v[224] += lk[0];
  v[227] ^= lk[1];
  v[226] = (v[226] >>> lk[0] % 16) | (v[226] << (32 - (lk[0] % 16)));
  v[229] -= lk[1];
  v[228] += lk[0];
  v[231] ^= lk[1];
  v[230] -= lk[0];
  v[233] -= lk[1];
  v[232] -= lk[0];
  v[235] = (v[235] >>> lk[1] % 16) | (v[235] << (32 - (lk[1] % 16)));
  v[234] ^= lk[0];
  v[237] = (v[237] << lk[1] % 16) | (v[237] >>> (32 - (lk[1] % 16)));
  v[236] += lk[0];
  v[239] ^= lk[1];
  v[238] -= lk[0];
  v[241] += lk[1];
  v[240] ^= lk[0];
  v[243] -= lk[1];
  v[242] += lk[0];
  v[245] ^= lk[1];
  v[244] = (v[244] >>> lk[0] % 16) | (v[244] << (32 - (lk[0] % 16)));
  v[247] -= lk[1];
  v[246] += lk[0];
  v[249] ^= lk[1];
  v[248] -= lk[0];
  v[251] -= lk[1];
  v[250] -= lk[0];
  v[253] = (v[253] >>> lk[1] % 16) | (v[253] << (32 - (lk[1] % 16)));
  v[252] ^= lk[0];
  v[255] = (v[255] << lk[1] % 16) | (v[255] >>> (32 - (lk[1] % 16)));
  v[254] += lk[0];
  v[257] ^= lk[1];
  v[256] -= lk[0];
  v[259] += lk[1];
  v[258] ^= lk[0];
  v[261] -= lk[1];
  v[260] += lk[0];
  v[263] ^= lk[1];
  v[262] = (v[262] >>> lk[0] % 16) | (v[262] << (32 - (lk[0] % 16)));
  v[265] -= lk[1];
  v[264] += lk[0];
  v[267] ^= lk[1];
  v[266] -= lk[0];
  v[269] -= lk[1];
  v[268] -= lk[0];
  v[271] = (v[271] >>> lk[1] % 16) | (v[271] << (32 - (lk[1] % 16)));
  v[270] ^= lk[0];
  v[273] = (v[273] << lk[1] % 16) | (v[273] >>> (32 - (lk[1] % 16)));
  v[272] += lk[0];
  v[275] ^= lk[1];
  v[274] -= lk[0];
  v[277] += lk[1];
  v[276] ^= lk[0];
  v[279] -= lk[1];
  v[278] += lk[0];
  v[281] ^= lk[1];
  v[280] = (v[280] >>> lk[0] % 16) | (v[280] << (32 - (lk[0] % 16)));
  v[283] -= lk[1];
  v[282] += lk[0];
  v[285] ^= lk[1];
  v[284] -= lk[0];
  v[287] -= lk[1];
  v[286] -= lk[0];
  v[289] = (v[289] >>> lk[1] % 16) | (v[289] << (32 - (lk[1] % 16)));
  v[288] ^= lk[0];
  v[291] = (v[291] << lk[1] % 16) | (v[291] >>> (32 - (lk[1] % 16)));
  v[290] += lk[0];
  v[293] ^= lk[1];
  v[292] -= lk[0];
  v[295] += lk[1];
  v[294] ^= lk[0];
  v[297] -= lk[1];
  v[296] += lk[0];
  v[299] ^= lk[1];
  v[298] = (v[298] >>> lk[0] % 16) | (v[298] << (32 - (lk[0] % 16)));
  v[301] -= lk[1];
  v[300] += lk[0];
  v[303] ^= lk[1];
  v[302] -= lk[0];
  v[305] -= lk[1];
  v[304] -= lk[0];
  v[307] = (v[307] >>> lk[1] % 16) | (v[307] << (32 - (lk[1] % 16)));
  v[306] ^= lk[0];
  v[309] = (v[309] << lk[1] % 16) | (v[309] >>> (32 - (lk[1] % 16)));
  v[308] += lk[0];
  v[311] ^= lk[1];
  v[310] -= lk[0];
  v[313] += lk[1];
  v[312] ^= lk[0];
  v[315] -= lk[1];
  v[314] += lk[0];
  v[317] ^= lk[1];
  v[316] = (v[316] >>> lk[0] % 16) | (v[316] << (32 - (lk[0] % 16)));
  v[319] -= lk[1];
  v[318] += lk[0];
  v[321] ^= lk[1];
  v[320] -= lk[0];
  v[323] -= lk[1];
  v[322] -= lk[0];
  v[325] = (v[325] >>> lk[1] % 16) | (v[325] << (32 - (lk[1] % 16)));
  v[324] ^= lk[0];
  v[327] = (v[327] << lk[1] % 16) | (v[327] >>> (32 - (lk[1] % 16)));
  v[326] += lk[0];
  v[329] ^= lk[1];
  v[328] -= lk[0];
  v[331] += lk[1];
  v[330] ^= lk[0];
  v[333] -= lk[1];
  v[332] += lk[0];
  v[335] ^= lk[1];
  v[334] = (v[334] >>> lk[0] % 16) | (v[334] << (32 - (lk[0] % 16)));
  v[337] -= lk[1];
  v[336] += lk[0];
  v[339] ^= lk[1];
  v[338] -= lk[0];
  v[341] -= lk[1];
  v[340] -= lk[0];
  v[343] = (v[343] >>> lk[1] % 16) | (v[343] << (32 - (lk[1] % 16)));
  v[342] ^= lk[0];
  v[345] = (v[345] << lk[1] % 16) | (v[345] >>> (32 - (lk[1] % 16)));
  v[344] += lk[0];
  v[347] ^= lk[1];
  v[346] -= lk[0];
  v[349] += lk[1];
  v[348] ^= lk[0];
  v[351] -= lk[1];
  v[350] += lk[0];
  v[353] ^= lk[1];
  v[352] = (v[352] >>> lk[0] % 16) | (v[352] << (32 - (lk[0] % 16)));
  v[355] -= lk[1];
  v[354] += lk[0];
  v[357] ^= lk[1];
  v[356] -= lk[0];
  for (var I = 0; I < 358; I += 2) {
    var i,
      v0 = v[I] ^ k2[0],
      v1 = v[I + 1] ^ k2[1],
      d = 0x9e3779b9,
      sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 357; O > 0; O--) {
    v[O] ^= v[O - 1];
  }
  v[0] ^= 0x3a0c9e6f;
  var strc = "";
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(
      v[i] & 0xff,
      (v[i] >>> 8) & 0xff,
      (v[i] >>> 16) & 0xff,
      (v[i] >>> 24) & 0xff
    );
  }
  console.log(strc)
  return eval(strc)(eab3bf71800, eab3bf71801, eab3bf71802);
}




// did 从 cookie 中获取，如果没有则取默认值 10000000000000000000000000001501
var did = '10000000000000000000000000001501'
function create_form(rid, tt) {
  var cb = rid + did + tt + "220120220115";
  // var rb = CryptoJS.MD5(cb).toString();
  var rb = '0b9acd39efe226c89c4d5322b9b510b8'
  var re = [];
  for (var i = 0; i < rb.length / 8; i++)
    re[i] =
      (parseInt(rb.substr(i * 8, 2), 16) & 0xff) |
      ((parseInt(rb.substr(i * 8 + 2, 2), 16) << 8) & 0xff00) |
      ((parseInt(rb.substr(i * 8 + 4, 2), 16) << 24) >>> 8) |
      (parseInt(rb.substr(i * 8 + 6, 2), 16) << 24);
  var k2 = [0x5a0e522, 0x2a3656bd, 0x77e180, 0x6bf023c3];
  for (var I = 0; I < 2; I++) {
    var v0 = re[I * 2],
      v1 = re[I * 2 + 1],
      sum = 0,
      i = 0;
    var delta = 0x9e3779b9;
    for (i = 0; i < 32; i++) {
      sum += delta;
      v0 += ((v1 << 4) + k2[0]) ^ (v1 + sum) ^ ((v1 >>> 5) + k2[1]);
      v1 += ((v0 << 4) + k2[2]) ^ (v0 + sum) ^ ((v0 >>> 5) + k2[3]);
    }
    re[I * 2] = v0;
    re[I * 2 + 1] = v1;
  }
  re[0] ^= k2[0];
  re[0] = (re[0] << k2[2] % 16) | (re[0] >>> (32 - (k2[2] % 16)));
  re[0] += k2[2];
  re[1] -= k2[1];
  re[1] = (re[1] >>> k2[3] % 16) | (re[1] << (32 - (k2[3] % 16)));
  re[1] ^= k2[3];
  re[2] += k2[0];
  re[2] ^= k2[2];
  re[2] += k2[2];
  re[3] ^= k2[1];
  re[3] -= k2[3];
  re[3] = (re[3] << k2[3] % 16) | (re[3] >>> (32 - (k2[3] % 16)));
  re[0] -= k2[0];
  re[0] += k2[2];
  re[0] -= k2[2];
  re[0] ^= k2[2];
  re[1] = (re[1] << k2[1] % 16) | (re[1] >>> (32 - (k2[1] % 16)));
  re[1] ^= k2[3];
  re[1] = (re[1] << k2[3] % 16) | (re[1] >>> (32 - (k2[3] % 16)));
  re[1] = (re[1] >>> k2[3] % 16) | (re[1] << (32 - (k2[3] % 16)));
  re[2] -= k2[0];
  re[2] += k2[2];
  re[2] = (re[2] >>> k2[2] % 16) | (re[2] << (32 - (k2[2] % 16)));
  re[3] += k2[1];
  re[3] ^= k2[3];
  re[3] ^= k2[3];
  console.log(re)
  {
    var hc = "0123456789abcdef".split("");
    for (var i = 0; i < re.length; i++) {
      var j = 0,
        s = "";
      for (; j < 4; j++)
        s += hc[(re[i] >> (j * 8 + 4)) & 15] + hc[(re[i] >> (j * 8)) & 15];
      re[i] = s;
    }
    re = re.join("");
  }
  var rt = "v=220120220115" + "&did=" + did + "&tt=" + tt + "&sign=" + re;
  return rt;
}

function get(xx0, xx1, xx2) {
  var cb = xx0 + xx1 + xx2 + "220120220117";
  var rb = 'e39b90ebbb343dba154b2e7fc8a1fa73';
  var re = [];
  for (var i = 0; i < rb.length / 8; i++) { 
    re[i] = (parseInt(rb.substr(i * 8, 2), 16) & 0xff) 
      | ((parseInt(rb.substr(i * 8 + 2, 2), 16) << 8) & 0xff00) 
      | ((parseInt(rb.substr(i * 8 + 4, 2), 16) << 24) >>> 8) 
      | (parseInt(rb.substr(i * 8 + 6, 2), 16) << 24);
  }

  var k2 = [0x5f7dd523, 0x2a3656bf, 0xfe440, 0x6bf023c5];
  for (var I = 0; I < 2; I++) {
    var v0 = re[I * 2],
      v1 = re[I * 2 + 1],
      sum = 0,
      i = 0;
    var delta = 0x9e3779b9;
    for (i = 0; i < 32; i++) {
      sum += delta;
      v0 += ((v1 << 4) + k2[0]) ^ (v1 + sum) ^ ((v1 >>> 5) + k2[1]);
      v1 += ((v0 << 4) + k2[2]) ^ (v0 + sum) ^ ((v0 >>> 5) + k2[3]);
    }
    re[I * 2] = v0;
    re[I * 2 + 1] = v1;
  }
  re[0] = (re[0] << (k2[0] % 16)) | (re[0] >>> (32 - (k2[0] % 16)));
  console.log(re[0])
  re[0] ^= k2[2];
  re[0] = (re[0] >>> (k2[2] % 16)) | (re[0] << (32 - (k2[2] % 16)));
  re[1] -= k2[1];
  re[1] = (re[1] >>> (k2[3] % 16)) | (re[1] << (32 - (k2[3] % 16)));
  re[1] -= k2[3];
  re[1] += k2[3];
  re[2] = (re[2] << (k2[0] % 16)) | (re[2] >>> (32 - (k2[0] % 16)));
  re[2] -= k2[2];
  re[2] = (re[2] << (k2[2] % 16)) | (re[2] >>> (32 - (k2[2] % 16)));
  re[3] ^= k2[1];
  re[3] = (re[3] >>> (k2[3] % 16)) | (re[3] << (32 - (k2[3] % 16)));
  re[3] += k2[3];
  re[0] -= k2[0];
  re[0] = (re[0] << (k2[2] % 16)) | (re[0] >>> (32 - (k2[2] % 16)));
  re[0] ^= k2[2];
  re[1] -= k2[1];
  re[1] = (re[1] >>> (k2[3] % 16)) | (re[1] << (32 - (k2[3] % 16)));
  re[1] = (re[1] >>> (k2[1] % 16)) | (re[1] << (32 - (k2[1] % 16)));
  re[1] ^= k2[3];
  re[2] -= k2[0];
  re[2] += k2[2];
  re[2] ^= k2[2];
  re[3] += k2[1];
  re[3] = (re[3] >>> (k2[3] % 16)) | (re[3] << (32 - (k2[3] % 16)));
  re[3] = (re[3] >>> (k2[1] % 16)) | (re[3] << (32 - (k2[1] % 16)));
  re[3] += k2[3];
  re[3] -= k2[3]; 
  console.log(re)
  {
    var hc = '0123456789abcdef'.split('');
    for (var i = 0; i < re.length; i++) {
      var j = 0,
        s = '';
      for (; j < 4; j++) s += hc[(re[i] >> (j * 8 + 4)) & 15] + hc[(re[i] >> (j * 8)) & 15];
      re[i] = s;
    }
    re = re.join('');
  }
  var rt = "v=220120220117" + "&did=" + xx1 + "&tt=" + xx2 + "&sign=" + re;
  return rt;
}

create_form(24422, "1642439030")
// console.log(ub98484234())
// get(2267291, '10000000000000000000000000001501', 1642437580)