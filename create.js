function test() {
    var rk = [
        21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21,
        41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41,
        35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35,
        31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31,
        34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34,
        34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34,
        40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40,
        17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17,
        10, 21, 41, 35, 31, 34, 34, 40, 17, 10, 21, 41, 35, 31, 34, 34, 40, 17, 10,
        21, 41, 35, 31, 34, 34, 40, 17,
    ];
    var k2 = [0x5a3ab33e, 0x36f5d7fe];
    var lk = [0x5a3ab33e, 0x36f5d7fe];
    var v = [
        0xD973C9DC,
        0xA34442B4,
        0x6565335D,
        0x70B26FE6,
        0x404B1FC4,
        0x6A8568D1,
        0x234F858B,
        0x29A17DBA,
        0xEA54D60F,
        0x4A565443,
        0x58FDA5D0,
        0x88DECE8E,
        0xA4FEBB70,
        0xE141CC8A,
        0x1DE302AA,
        0x8348236,
        0x20C70E4F,
        0xF9739E92,
        0xA056D63,
        0x78193E8F,
        0x5D6E5D2E,
        0xCF960381,
        0x90F63BE3,
        0xAC3087B7,
        0xE3E6686D,
        0xEDB187EB,
        0x4CE77435,
        0xB8531244,
        0xD50D6F16,
        0x18A94F30,
        0xD6C39B91,
        0x7356BB4F,
        0xB164DFFF,
        0xAEF5A9E0,
        0x11D11611,
        0x75D6CE70,
        0x670A3C06,
        0x8BC3F4B4,
        0xE7754FC2,
        0xD7A5C3AF,
        0xCEDF6E33,
        0xB515FCB7,
        0xF1B40F5B,
        0x7165466D,
        0x763DB9F1,
        0x98FD49FA,
        0x1670094F,
        0xFB5F5320,
        0x48C60F01,
        0xD500913F,
        0xFEBDC6FB,
        0xECEF8468,
        0x19EE1E6C,
        0x1F12DE85,
        0xC017C083,
        0x6FD3C6F5,
        0x4C65487,
        0x74710091,
        0x49A72D13,
        0xDB36F41B,
        0xFB5C9757,
        0xBF49B44E,
        0xAE20900E,
        0x13A9DD12,
        0x2913F19B,
        0x996B9D35,
        0xD88F0806,
        0x4F2B973E,
        0x25DEA627,
        0xA16669EF,
        0x7DE1B139,
        0xE67000B5,
        0xC638CAE4,
        0x21114385,
        0x3280B715,
        0xB57C29E2,
        0xAE09C52B,
        0x3FAE82F4,
        0xFB205C1D,
        0xBA55CB6A,
        0xDA6B9A86,
        0xD20EA75C,
        0xC5AD0798,
        0x34D3767B,
        0xC57EE566,
        0xE7BF7529,
        0x2D3753F4,
        0xADCC036B,
        0x44A3EA9C,
        0x26173F74,
        0xAE0819F4,
        0x66AC0692,
        0x22F8A978,
        0x932359E1,
        0x1D678D73,
        0x9DC47AC4,
        0x1125F07A,
        0xC4660E41,
        0x8510A80D,
        0xF964CAA6,
        0x575365F6,
        0x3A27E76F,
        0xEDE4D7EC,
        0xB582037D,
        0x2DFAD011,
        0x35CE13BC,
        0x6BD989F7,
        0xDDDC0073,
        0x4718D526,
        0x6D04D44E,
        0x5D7DBC03,
        0x6FE8FE37,
        0x74494E96,
        0xFE756DB4,
        0xB4DE5B4,
        0x966DC57C,
        0x57E343E2,
        0x5FC798B2,
        0x282F8032,
        0xCD7F979E,
        0x657B0923,
        0x8E992B0D,
        0xD697A21,
        0x851E1D28,
        0x3EFB1FDD,
        0xD956D3B3,
        0xCBF818B3,
        0xA61B82A9,
        0x27C5F329,
        0x7D20C9D7,
        0x6A4627C6,
        0x3102C583,
        0xE1F1D8D6,
        0x95492C0C,
        0xC7F42960,
        0x6A87D3AD,
        0x9FA9D24C,
        0xB214DF0B,
        0x6802D206,
        0xB2643B05,
        0x14D12EE2,
        0x70137CCF,
        0xA489A58A,
        0x6C28397E,
        0x45252E82,
        0x4D4483AE,
        0x9E5EF761,
        0x152FD123,
        0x6CC521A6,
        0xB49389AB,
        0x372F63EC,
        0x562F8947,
        0x5AF79831,
        0xA951E8F7,
        0x832EC0B2,
        0x8C36040D,
        0xAB73020C,
        0x26891006,
        0x3E2E1929,
        0x60FE8658,
        0x4B4C01A4,
        0x73927F1F,
        0xF10995E9,
        0x9B45ABAB,
        0x8A7F5521,
        0x99C2AB31,
        0x566DC269,
        0xAC3FD260,
        0x77FB5874,
        0x838432CF,
        0xC98AE145,
        0x93B107F4,
        0x2E32531E,
        0xBA3BF03F,
        0x9A4CE415,
        0x6AC21256,
        0x56C88F4,
        0x7BA8AAD1,
        0x736553BD,
        0xC24610B,
        0x376E09E8,
        0x2CFAC2A8,
        0xC656247A,
        0xFEEFE8D1,
        0xCA266EA8,
        0xD034D947,
        0x531A0308,
        0x1887FBC5,
        0x35F8737D,
        0x4460D67C,
        0xA2A8F04,
        0x28F0360C,
        0x2E65D7D5,
        0x1F92AB81,
        0x179F323A,
        0x3CF1DA91,
        0xE3DC8C13,
        0x3300954F,
        0xEC770EA2,
        0x16564D60,
        0x3F38AC5A,
        0xD4159C66,
        0xE4E46784,
        0x810CC305,
        0x9C323C2B,
        0xBF1AB068,
        0xDFA7AB0F,
        0x6EC681D9,
        0x716A7D79,
        0x53318054,
        0x6B528358,
        0x98C4DEEB,
        0x6C7BFDDD,
        0xC3B12037,
        0x3CF2AE94,
        0x5D659815,
        0x40E8AB4D,
        0x64B7F8B0,
        0xF1BC2BC5,
        0x75A8312A,
        0x6888891,
        0x532E06D6,
        0x4B46E41A,
        0xC3105CCB,
        0x1441888D,
        0x53A40B90,
        0x31144401,
        0xC380C50B,
        0x40C28FF9,
        0x7E060D70,
        0x30780F68,
        0x47312DD9,
        0x61218F57,
        0x3AD180BC,
        0xF086C7D2,
        0x48E8FE87,
        0x5506294A,
        0xE57A9973,
        0xA60E0C62,
        0x9A00774D,
        0x5C9C39F4,
        0x5943F8F8,
        0x3199CE63,
        0x758958DB,
        0xE3FDF48E,
        0xF97A9E05,
        0x649560CD,
        0x2B5B7583,
        0xCBF7A55E,
        0x35A41C84,
        0x5DF626CC,
        0x26956CDB,
        0xB44B2A1A,
        0x83403A8A,
        0x4E95D85A,
        0x47257AB5,
        0x3326EE34,
        0x2787F4CF,
        0x1252499A,
        0x3E5017A2,
        0xD44277AD,
        0xA2891A07,
        0xFA0FBDAE,
        0xE767DCD3,
        0xF2154A71,
        0x591A32A1,
        0x3F563072,
        0x5778C2A2,
        0xD5612A17,
        0x1152778B,
        0xE552C590,
        0xEA5B5FA5,
        0xC0317ECE,
        0x24489B09,
        0x4F416997,
        0xDC86ED3D,
        0xBC9D7D1A,
        0x15D6F84,
        0xB2C57CB2,
        0x51B98AF6,
        0x1D8065C,
        0xA4A92638,
        0x26C5C231,
        0x62C482CD,
        0xFB2CCC1F,
        0x5629A407,
        0x733FC94F,
        0x203DBF48,
        0x6DEFC09D,
        0x20A5B6B1,
        0xF533663C,
        0x53848203,
        0x85F40857,
        0x7F42AC16,
        0x821C6A8D,
        0x58905962,
        0x5B62D7F3,
        0x8F14A2FF,
        0x39705ECE,
        0x17EE4B2D,
        0xA3E36F9F,
        0xC313A857,
        0x40539526,
        0x91C1B6E,
        0x93DC462C,
        0x97B70304,
        0x10614DE5,
        0xF3D89B9E,
        0x962D5A36,
        0x545F2594,
        0x2F787C5D,
        0x6FD0B0E9,
        0xA4CF405D,
        0x7B2C5A4D,
        0xF90A2AC7,
        0x4B583AED,
        0xA670D925,
        0x5DF923BE,
        0x57F1B9F,
        0x181D7EE1,
        0x704F861D,
        0xAD43FE4C,
        0xCB3A7981,
        0x9C9C67CC,
        0xB7D2FA7F,
        0x4A0465D1,
        0x1187D87,
        0xEBC78273,
        0x80C3DA03,
        0x7D488F70,
        0x6CC3D5A4,
        0xFF6A589F,
        0xC0EBD5B1,
        0x448C080E,
        0x4B1F9DCD,
        0x6829D64C,
        0xF62525FE,
        0x653702E0,
        0x83C0A815,
        0x342174AF,
        0xABE53A88,
        0x87A38BF8,
        0xF856FC62,
        0x6EF15A4C,
        0x6A9F5E19,
        0x1FF80CE,
        0x9C419936,
        0x3DEF4689,
        0xE97D52E0,
        0xD15E34E1,
        0xFF588A66,
        0xF3584BE9,
        0xD9F31F4E,
        0xE0B6B605,
        0xE79241F8,
        0x27B3CEC3,
        0xC630E0B5,
        0x4772CB08,
    ];
    var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
    for (var O = 0; O < 358; O++) {
        v[O] ^= 0x3a0c9e6f;
    }
    v[1] = (v[1] >>> lk[1] % 16) | (v[1] << (32 - (lk[1] % 16)));
    v[0] ^= lk[0];
    v[3] = (v[3] << lk[1] % 16) | (v[3] >>> (32 - (lk[1] % 16)));
    v[2] += lk[0];
    v[5] ^= lk[1];
    v[4] -= lk[0];
    v[7] += lk[1];
    v[6] ^= lk[0];
    v[9] -= lk[1];
    v[8] += lk[0];
    v[11] ^= lk[1];
    v[10] = (v[10] >>> lk[0] % 16) | (v[10] << (32 - (lk[0] % 16)));
    v[13] -= lk[1];
    v[12] += lk[0];
    v[15] ^= lk[1];
    v[14] -= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] = (v[19] >>> lk[1] % 16) | (v[19] << (32 - (lk[1] % 16)));
    v[18] ^= lk[0];
    v[21] = (v[21] << lk[1] % 16) | (v[21] >>> (32 - (lk[1] % 16)));
    v[20] += lk[0];
    v[23] ^= lk[1];
    v[22] -= lk[0];
    v[25] += lk[1];
    v[24] ^= lk[0];
    v[27] -= lk[1];
    v[26] += lk[0];
    v[29] ^= lk[1];
    v[28] = (v[28] >>> lk[0] % 16) | (v[28] << (32 - (lk[0] % 16)));
    v[31] -= lk[1];
    v[30] += lk[0];
    v[33] ^= lk[1];
    v[32] -= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] = (v[37] >>> lk[1] % 16) | (v[37] << (32 - (lk[1] % 16)));
    v[36] ^= lk[0];
    v[39] = (v[39] << lk[1] % 16) | (v[39] >>> (32 - (lk[1] % 16)));
    v[38] += lk[0];
    v[41] ^= lk[1];
    v[40] -= lk[0];
    v[43] += lk[1];
    v[42] ^= lk[0];
    v[45] -= lk[1];
    v[44] += lk[0];
    v[47] ^= lk[1];
    v[46] = (v[46] >>> lk[0] % 16) | (v[46] << (32 - (lk[0] % 16)));
    v[49] -= lk[1];
    v[48] += lk[0];
    v[51] ^= lk[1];
    v[50] -= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] = (v[55] >>> lk[1] % 16) | (v[55] << (32 - (lk[1] % 16)));
    v[54] ^= lk[0];
    v[57] = (v[57] << lk[1] % 16) | (v[57] >>> (32 - (lk[1] % 16)));
    v[56] += lk[0];
    v[59] ^= lk[1];
    v[58] -= lk[0];
    v[61] += lk[1];
    v[60] ^= lk[0];
    v[63] -= lk[1];
    v[62] += lk[0];
    v[65] ^= lk[1];
    v[64] = (v[64] >>> lk[0] % 16) | (v[64] << (32 - (lk[0] % 16)));
    v[67] -= lk[1];
    v[66] += lk[0];
    v[69] ^= lk[1];
    v[68] -= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] = (v[73] >>> lk[1] % 16) | (v[73] << (32 - (lk[1] % 16)));
    v[72] ^= lk[0];
    v[75] = (v[75] << lk[1] % 16) | (v[75] >>> (32 - (lk[1] % 16)));
    v[74] += lk[0];
    v[77] ^= lk[1];
    v[76] -= lk[0];
    v[79] += lk[1];
    v[78] ^= lk[0];
    v[81] -= lk[1];
    v[80] += lk[0];
    v[83] ^= lk[1];
    v[82] = (v[82] >>> lk[0] % 16) | (v[82] << (32 - (lk[0] % 16)));
    v[85] -= lk[1];
    v[84] += lk[0];
    v[87] ^= lk[1];
    v[86] -= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] = (v[91] >>> lk[1] % 16) | (v[91] << (32 - (lk[1] % 16)));
    v[90] ^= lk[0];
    v[93] = (v[93] << lk[1] % 16) | (v[93] >>> (32 - (lk[1] % 16)));
    v[92] += lk[0];
    v[95] ^= lk[1];
    v[94] -= lk[0];
    v[97] += lk[1];
    v[96] ^= lk[0];
    v[99] -= lk[1];
    v[98] += lk[0];
    v[101] ^= lk[1];
    v[100] = (v[100] >>> lk[0] % 16) | (v[100] << (32 - (lk[0] % 16)));
    v[103] -= lk[1];
    v[102] += lk[0];
    v[105] ^= lk[1];
    v[104] -= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] = (v[109] >>> lk[1] % 16) | (v[109] << (32 - (lk[1] % 16)));
    v[108] ^= lk[0];
    v[111] = (v[111] << lk[1] % 16) | (v[111] >>> (32 - (lk[1] % 16)));
    v[110] += lk[0];
    v[113] ^= lk[1];
    v[112] -= lk[0];
    v[115] += lk[1];
    v[114] ^= lk[0];
    v[117] -= lk[1];
    v[116] += lk[0];
    v[119] ^= lk[1];
    v[118] = (v[118] >>> lk[0] % 16) | (v[118] << (32 - (lk[0] % 16)));
    v[121] -= lk[1];
    v[120] += lk[0];
    v[123] ^= lk[1];
    v[122] -= lk[0];
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] = (v[127] >>> lk[1] % 16) | (v[127] << (32 - (lk[1] % 16)));
    v[126] ^= lk[0];
    v[129] = (v[129] << lk[1] % 16) | (v[129] >>> (32 - (lk[1] % 16)));
    v[128] += lk[0];
    v[131] ^= lk[1];
    v[130] -= lk[0];
    v[133] += lk[1];
    v[132] ^= lk[0];
    v[135] -= lk[1];
    v[134] += lk[0];
    v[137] ^= lk[1];
    v[136] = (v[136] >>> lk[0] % 16) | (v[136] << (32 - (lk[0] % 16)));
    v[139] -= lk[1];
    v[138] += lk[0];
    v[141] ^= lk[1];
    v[140] -= lk[0];
    v[143] -= lk[1];
    v[142] -= lk[0];
    v[145] = (v[145] >>> lk[1] % 16) | (v[145] << (32 - (lk[1] % 16)));
    v[144] ^= lk[0];
    v[147] = (v[147] << lk[1] % 16) | (v[147] >>> (32 - (lk[1] % 16)));
    v[146] += lk[0];
    v[149] ^= lk[1];
    v[148] -= lk[0];
    v[151] += lk[1];
    v[150] ^= lk[0];
    v[153] -= lk[1];
    v[152] += lk[0];
    v[155] ^= lk[1];
    v[154] = (v[154] >>> lk[0] % 16) | (v[154] << (32 - (lk[0] % 16)));
    v[157] -= lk[1];
    v[156] += lk[0];
    v[159] ^= lk[1];
    v[158] -= lk[0];
    v[161] -= lk[1];
    v[160] -= lk[0];
    v[163] = (v[163] >>> lk[1] % 16) | (v[163] << (32 - (lk[1] % 16)));
    v[162] ^= lk[0];
    v[165] = (v[165] << lk[1] % 16) | (v[165] >>> (32 - (lk[1] % 16)));
    v[164] += lk[0];
    v[167] ^= lk[1];
    v[166] -= lk[0];
    v[169] += lk[1];
    v[168] ^= lk[0];
    v[171] -= lk[1];
    v[170] += lk[0];
    v[173] ^= lk[1];
    v[172] = (v[172] >>> lk[0] % 16) | (v[172] << (32 - (lk[0] % 16)));
    v[175] -= lk[1];
    v[174] += lk[0];
    v[177] ^= lk[1];
    v[176] -= lk[0];
    v[179] -= lk[1];
    v[178] -= lk[0];
    v[181] = (v[181] >>> lk[1] % 16) | (v[181] << (32 - (lk[1] % 16)));
    v[180] ^= lk[0];
    v[183] = (v[183] << lk[1] % 16) | (v[183] >>> (32 - (lk[1] % 16)));
    v[182] += lk[0];
    v[185] ^= lk[1];
    v[184] -= lk[0];
    v[187] += lk[1];
    v[186] ^= lk[0];
    v[189] -= lk[1];
    v[188] += lk[0];
    v[191] ^= lk[1];
    v[190] = (v[190] >>> lk[0] % 16) | (v[190] << (32 - (lk[0] % 16)));
    v[193] -= lk[1];
    v[192] += lk[0];
    v[195] ^= lk[1];
    v[194] -= lk[0];
    v[197] -= lk[1];
    v[196] -= lk[0];
    v[199] = (v[199] >>> lk[1] % 16) | (v[199] << (32 - (lk[1] % 16)));
    v[198] ^= lk[0];
    v[201] = (v[201] << lk[1] % 16) | (v[201] >>> (32 - (lk[1] % 16)));
    v[200] += lk[0];
    v[203] ^= lk[1];
    v[202] -= lk[0];
    v[205] += lk[1];
    v[204] ^= lk[0];
    v[207] -= lk[1];
    v[206] += lk[0];
    v[209] ^= lk[1];
    v[208] = (v[208] >>> lk[0] % 16) | (v[208] << (32 - (lk[0] % 16)));
    v[211] -= lk[1];
    v[210] += lk[0];
    v[213] ^= lk[1];
    v[212] -= lk[0];
    v[215] -= lk[1];
    v[214] -= lk[0];
    v[217] = (v[217] >>> lk[1] % 16) | (v[217] << (32 - (lk[1] % 16)));
    v[216] ^= lk[0];
    v[219] = (v[219] << lk[1] % 16) | (v[219] >>> (32 - (lk[1] % 16)));
    v[218] += lk[0];
    v[221] ^= lk[1];
    v[220] -= lk[0];
    v[223] += lk[1];
    v[222] ^= lk[0];
    v[225] -= lk[1];
    v[224] += lk[0];
    v[227] ^= lk[1];
    v[226] = (v[226] >>> lk[0] % 16) | (v[226] << (32 - (lk[0] % 16)));
    v[229] -= lk[1];
    v[228] += lk[0];
    v[231] ^= lk[1];
    v[230] -= lk[0];
    v[233] -= lk[1];
    v[232] -= lk[0];
    v[235] = (v[235] >>> lk[1] % 16) | (v[235] << (32 - (lk[1] % 16)));
    v[234] ^= lk[0];
    v[237] = (v[237] << lk[1] % 16) | (v[237] >>> (32 - (lk[1] % 16)));
    v[236] += lk[0];
    v[239] ^= lk[1];
    v[238] -= lk[0];
    v[241] += lk[1];
    v[240] ^= lk[0];
    v[243] -= lk[1];
    v[242] += lk[0];
    v[245] ^= lk[1];
    v[244] = (v[244] >>> lk[0] % 16) | (v[244] << (32 - (lk[0] % 16)));
    v[247] -= lk[1];
    v[246] += lk[0];
    v[249] ^= lk[1];
    v[248] -= lk[0];
    v[251] -= lk[1];
    v[250] -= lk[0];
    v[253] = (v[253] >>> lk[1] % 16) | (v[253] << (32 - (lk[1] % 16)));
    v[252] ^= lk[0];
    v[255] = (v[255] << lk[1] % 16) | (v[255] >>> (32 - (lk[1] % 16)));
    v[254] += lk[0];
    v[257] ^= lk[1];
    v[256] -= lk[0];
    v[259] += lk[1];
    v[258] ^= lk[0];
    v[261] -= lk[1];
    v[260] += lk[0];
    v[263] ^= lk[1];
    v[262] = (v[262] >>> lk[0] % 16) | (v[262] << (32 - (lk[0] % 16)));
    v[265] -= lk[1];
    v[264] += lk[0];
    v[267] ^= lk[1];
    v[266] -= lk[0];
    v[269] -= lk[1];
    v[268] -= lk[0];
    v[271] = (v[271] >>> lk[1] % 16) | (v[271] << (32 - (lk[1] % 16)));
    v[270] ^= lk[0];
    v[273] = (v[273] << lk[1] % 16) | (v[273] >>> (32 - (lk[1] % 16)));
    v[272] += lk[0];
    v[275] ^= lk[1];
    v[274] -= lk[0];
    v[277] += lk[1];
    v[276] ^= lk[0];
    v[279] -= lk[1];
    v[278] += lk[0];
    v[281] ^= lk[1];
    v[280] = (v[280] >>> lk[0] % 16) | (v[280] << (32 - (lk[0] % 16)));
    v[283] -= lk[1];
    v[282] += lk[0];
    v[285] ^= lk[1];
    v[284] -= lk[0];
    v[287] -= lk[1];
    v[286] -= lk[0];
    v[289] = (v[289] >>> lk[1] % 16) | (v[289] << (32 - (lk[1] % 16)));
    v[288] ^= lk[0];
    v[291] = (v[291] << lk[1] % 16) | (v[291] >>> (32 - (lk[1] % 16)));
    v[290] += lk[0];
    v[293] ^= lk[1];
    v[292] -= lk[0];
    v[295] += lk[1];
    v[294] ^= lk[0];
    v[297] -= lk[1];
    v[296] += lk[0];
    v[299] ^= lk[1];
    v[298] = (v[298] >>> lk[0] % 16) | (v[298] << (32 - (lk[0] % 16)));
    v[301] -= lk[1];
    v[300] += lk[0];
    v[303] ^= lk[1];
    v[302] -= lk[0];
    v[305] -= lk[1];
    v[304] -= lk[0];
    v[307] = (v[307] >>> lk[1] % 16) | (v[307] << (32 - (lk[1] % 16)));
    v[306] ^= lk[0];
    v[309] = (v[309] << lk[1] % 16) | (v[309] >>> (32 - (lk[1] % 16)));
    v[308] += lk[0];
    v[311] ^= lk[1];
    v[310] -= lk[0];
    v[313] += lk[1];
    v[312] ^= lk[0];
    v[315] -= lk[1];
    v[314] += lk[0];
    v[317] ^= lk[1];
    v[316] = (v[316] >>> lk[0] % 16) | (v[316] << (32 - (lk[0] % 16)));
    v[319] -= lk[1];
    v[318] += lk[0];
    v[321] ^= lk[1];
    v[320] -= lk[0];
    v[323] -= lk[1];
    v[322] -= lk[0];
    v[325] = (v[325] >>> lk[1] % 16) | (v[325] << (32 - (lk[1] % 16)));
    v[324] ^= lk[0];
    v[327] = (v[327] << lk[1] % 16) | (v[327] >>> (32 - (lk[1] % 16)));
    v[326] += lk[0];
    v[329] ^= lk[1];
    v[328] -= lk[0];
    v[331] += lk[1];
    v[330] ^= lk[0];
    v[333] -= lk[1];
    v[332] += lk[0];
    v[335] ^= lk[1];
    v[334] = (v[334] >>> lk[0] % 16) | (v[334] << (32 - (lk[0] % 16)));
    v[337] -= lk[1];
    v[336] += lk[0];
    v[339] ^= lk[1];
    v[338] -= lk[0];
    v[341] -= lk[1];
    v[340] -= lk[0];
    v[343] = (v[343] >>> lk[1] % 16) | (v[343] << (32 - (lk[1] % 16)));
    v[342] ^= lk[0];
    v[345] = (v[345] << lk[1] % 16) | (v[345] >>> (32 - (lk[1] % 16)));
    v[344] += lk[0];
    v[347] ^= lk[1];
    v[346] -= lk[0];
    v[349] += lk[1];
    v[348] ^= lk[0];
    v[351] -= lk[1];
    v[350] += lk[0];
    v[353] ^= lk[1];
    v[352] = (v[352] >>> lk[0] % 16) | (v[352] << (32 - (lk[0] % 16)));
    v[355] -= lk[1];
    v[354] += lk[0];
    v[357] ^= lk[1];
    v[356] -= lk[0];
    for (var I = 0; I < 358; I += 2) {
        var i,
            v0 = v[I] ^ k2[0],
            v1 = v[I + 1] ^ k2[1],
            d = 0x9e3779b9,
            sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 357; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x3a0c9e6f;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(
            v[i] & 0xff,
            (v[i] >>> 8) & 0xff,
            (v[i] >>> 16) & 0xff,
            (v[i] >>> 24) & 0xff
        );
    }
    console.log(strc)
}

test()